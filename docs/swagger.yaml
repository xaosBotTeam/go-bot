basePath: /
definitions:
  account.Account:
    description: Model with static info about game account
    properties:
      owner:
        type: integer
      url:
        type: string
    type: object
  config.Config:
    description: Model with information about tasks and their parameters
    properties:
      arena_farming:
        type: boolean
      arena_use_energy_cans:
        type: boolean
      travelling:
        type: boolean
    type: object
host: localhost:5504
info:
  contact: {}
  description: API for xaos.mobi bot
  title: Go xaos.mobi bot
  version: 0.0.0
paths:
  /account/:
    get:
      operationId: get-all-accounts
      produces:
      - application/json
      responses: {}
      summary: Get all game accounts
      tags:
      - Account
    post:
      operationId: add-new-game-account
      parameters:
      - description: account url
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/account.Account'
      produces:
      - application/json
      responses: {}
      summary: Add new game account
      tags:
      - Account
  /account/{id}:
    delete:
      operationId: delete-account-by-id
      parameters:
      - description: account id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: Delete game account by id
      tags:
      - Account
    get:
      operationId: get-account-by-id
      parameters:
      - description: account id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: Get game account by id
      tags:
      - Account
  /config/:
    get:
      description: get all configs
      operationId: get-all-configs
      produces:
      - application/json
      responses: {}
      summary: Get all configs
      tags:
      - Config
    put:
      consumes:
      - application/json
      description: get config for all
      operationId: update-config-for-all
      parameters:
      - description: new config
        in: body
        name: config
        required: true
        schema:
          $ref: '#/definitions/config.Config'
      responses: {}
      summary: Update config for all
      tags:
      - Config
  /config/{id}:
    get:
      description: get config by ID
      operationId: get-config-by-id
      parameters:
      - description: account id
        in: path
        name: id
        type: integer
      produces:
      - application/json
      responses: {}
      summary: Get config by id
      tags:
      - Config
    put:
      consumes:
      - application/json
      description: get config by ID
      operationId: get-config-by-id
      parameters:
      - description: account id
        in: path
        name: id
        required: true
        type: integer
      - description: new config
        in: body
        name: config
        required: true
        schema:
          $ref: '#/definitions/config.Config'
      responses: {}
      summary: Update config by id
      tags:
      - Config
  /status/:
    get:
      operationId: get-statuses
      produces:
      - application/json
      responses: {}
      summary: Get all statuses
      tags:
      - Status
  /status/{id}:
    get:
      operationId: get-status-by-id
      parameters:
      - description: account id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: Get status by id
      tags:
      - Status
swagger: "2.0"
